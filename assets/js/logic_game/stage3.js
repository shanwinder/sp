// File: assets/js/logic_game/stage3.js (‡∏â‡∏ö‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÅ‡∏•‡∏∞‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°)

(function () {
    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
    document.addEventListener('DOMContentLoaded', function () {
        
        // --- 1. ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° (Phaser Config) ---
        const config = {
            type: Phaser.AUTO,
            scale: {
                mode: Phaser.Scale.FIT,
                autoCenter: Phaser.Scale.CENTER_BOTH,
                width: 700,
                height: 200 // ‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏•‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà‡πÇ‡∏à‡∏ó‡∏¢‡πå‡πÉ‡∏ô canvas
            },
            parent: "game-container",
            backgroundColor: '#ffffff', // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
            scene: {
                preload: preload,
                create: create
            }
        };

        // --- 2. ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏à‡∏ó‡∏¢‡πå‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° ---
        const problems = [
            { sequence: [1, 2, '?', 4], answer: 3 },
            { sequence: [2, 4, '?', 8], answer: 6 },
            { sequence: [5, 10, '?', 20], answer: 15 },
            { sequence: [10, 8, '?', 4], answer: 6 },
            { sequence: [3, 6, 9, '?'], answer: 12 }
        ];

        let currentProblemIndex = 0; // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏î‡∏±‡∏ä‡∏ô‡∏µ‡∏Ç‡∏≠‡∏á‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ç‡πâ‡∏≠‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        let gameScene; // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö scene ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ‡πà
        let problemTextObjects = []; // –º–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ —Ç–µ–∫—É—â–µ–π –∑–∞–¥–∞—á–∏
        const game = new Phaser.Game(config); // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Å‡∏°

        // --- 3. ‡∏î‡∏∂‡∏á‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö HTML ‡∏°‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ ---
        const answerInput = document.getElementById('answer-input');
        const checkButton = document.getElementById('check-button');
        const feedbackText = document.getElementById('feedback-text');

        // --- 4. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏≠‡∏á Phaser ---
        function preload() {
            // ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
            this.load.audio('correct_sound', '../assets/sound/correct.mp3');
            this.load.audio('wrong_sound', '../assets/sound/wrong.mp3');
        }

        function create() {
            gameScene = this; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ scene ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            // ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ç‡πâ‡∏≠‡πÅ‡∏£‡∏Å
            displayCurrentProblem();
        }

        // --- 5. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ï‡∏£‡∏£‡∏Å‡∏∞‡∏Ç‡∏≠‡∏á‡πÄ‡∏Å‡∏° ---
        
        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô canvas
        function displayCurrentProblem() {
            // ‡∏•‡πâ‡∏≤‡∏á‡πÇ‡∏à‡∏ó‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô
            problemTextObjects.forEach(text => text.destroy());
            problemTextObjects = [];

            const problem = problems[currentProblemIndex];
            const yPos = config.scale.height / 2; // ‡∏à‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á
            const spacing = config.scale.width / (problem.sequence.length + 1); //‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥

            // ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÉ‡∏ô‡πÇ‡∏à‡∏ó‡∏¢‡πå
            problem.sequence.forEach((item, index) => {
                const text = gameScene.add.text(spacing * (index + 1), yPos, item, {
                    fontSize: '64px', // ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡∏ç‡πà‡πÜ
                    color: item === '?' ? '#ff6f61' : '#0d6efd', // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ '?' ‡∏°‡∏µ‡∏™‡∏µ‡πÄ‡∏î‡πà‡∏ô
                    fontFamily: 'Kanit, sans-serif',
                    fontWeight: 'bold',
                    stroke: '#ffffff',
                    strokeThickness: 6
                }).setOrigin(0.5);

                problemTextObjects.push(text);
            });
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
        function handleCheckAnswer() {
            if (answerInput.value === '') return; // ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏ñ‡πâ‡∏≤‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á

            const userAnswer = parseInt(answerInput.value, 10);
            const correctAnswer = problems[currentProblemIndex].answer;

            if (userAnswer === correctAnswer) {
                // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å
                gameScene.sound.play('correct_sound');
                feedbackText.textContent = 'üéâ ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å!';
                feedbackText.className = 'mt-3 text-success';
                
                currentProblemIndex++; // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ç‡πâ‡∏≠‡∏ñ‡∏±‡∏î‡πÑ‡∏õ

                if (currentProblemIndex >= problems.length) {
                    // ‡∏ñ‡πâ‡∏≤‡∏ó‡∏≥‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ç‡πâ‡∏≠‡πÅ‡∏•‡πâ‡∏ß -> ‡∏ä‡∏ô‡∏∞
                    setTimeout(handleWin, 1000);
                } else {
                    // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö -> ‡πÅ‡∏™‡∏î‡∏á‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ç‡πâ‡∏≠‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
                    setTimeout(() => {
                        displayCurrentProblem();
                        feedbackText.textContent = ''; // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° feedback
                    }, 1500);
                }
            } else {
                // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ï‡∏≠‡∏ö‡∏ú‡∏¥‡∏î
                gameScene.sound.play('wrong_sound');
                feedbackText.textContent = '‚ùå ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ô‡∏∞ ‡∏•‡∏≠‡∏á‡∏Ñ‡∏¥‡∏î‡∏î‡∏π‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ!';
                feedbackText.className = 'mt-3 text-danger';
                gameScene.cameras.main.shake(150, 0.005); // ‡πÄ‡∏Ç‡∏¢‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏ö‡∏≤‡πÜ
            }

            answerInput.value = ''; // ‡∏•‡πâ‡∏≤‡∏á‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            answerInput.focus(); // ‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô
        function handleWin() {
            // ‡∏ã‡πà‡∏≠‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤ "‡∏ä‡∏ô‡∏∞‡πÅ‡∏•‡πâ‡∏ß"
            document.getElementById('game-area').innerHTML = `
                <div class="text-center">
                    <h2 class="text-success" style="font-size: 3rem;">‚ú® ‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°! ‚ú®</h2>
                    <p class="lead" style="font-size: 1.5rem;">‡∏Ñ‡∏∏‡∏ì‡∏ú‡πà‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡πâ‡∏ß<br>‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö +100 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</p>
                </div>
            `;
            // ‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà server
            sendResult(100);
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
        function sendResult(score) {
            fetch('../api/submit_stage_score.php', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `stage_id=${STAGE_ID}&score=${score}`
            }).then(() => {
                if (typeof window.updateScoreBar === 'function') window.updateScoreBar();
                if (typeof window.triggerAutoNextStage === 'function') window.triggerAutoNextStage();
            });
        }

        // --- 6. ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå (Event Listeners) ---
        checkButton.addEventListener('click', handleCheckAnswer);
        answerInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                handleCheckAnswer();
            }
        });

        // ‡πÉ‡∏´‡πâ‡πÄ‡∏Ñ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÑ‡∏õ‡∏£‡∏≠‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°
        answerInput.focus();
    });
})();